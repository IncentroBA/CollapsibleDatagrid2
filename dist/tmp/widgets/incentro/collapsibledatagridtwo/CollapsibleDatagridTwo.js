define(['exports', 'react'], (function (exports, react) { 'use strict';

    function CollapsibleDatagridTwo({
      closeOnClick,
      contentWidgets,
      ...rest
    }) {
      const style = rest.class || "";
      const chevronRef = react.useRef(null);
      const collapsibleRef = react.useRef(null);
      const datagrid = react.useRef(null);
      const [chevronActive, setChevronActive] = react.useState(false);
      function useOutsideAlerter(ref1, ref2) {
        function handleClickOutside(event) {
          if (ref1.current && !ref1.current.contains(event.target) && !ref2.current.contains(event.target)) {
            setChevronActive(false);
          }
        }
        document.addEventListener("mouseup", handleClickOutside); // Bind the event listener
        return () => document.removeEventListener("mouseup", handleClickOutside); // Unbind the event listener on clean up
      }
      function toggleTrCollapse() {
        if (!chevronActive) {
          closeOnClick && useOutsideAlerter(collapsibleRef, chevronRef);
        }
        setChevronActive(!chevronActive);
      }
      react.useEffect(() => {
        if (collapsibleRef && collapsibleRef.current) {
          datagrid.current = chevronRef.current.closest('.widget-datagrid');
          const row = collapsibleRef.current.closest(".tr");
          row.appendChild(collapsibleRef.current);
        }
      });
      return react.createElement("div", null, react.createElement("div", {
        className: `btn-td-collapse ${style} ${chevronActive ? "btn-td-collapse--active" : ""}`,
        ref: chevronRef,
        onClick: toggleTrCollapse
      }, react.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        height: "16",
        width: "16",
        viewBox: "0 0 16 16"
      }, react.createElement("path", {
        d: "M8.00004 11.1369C8.21033 11.1369 8.38741 11.0539 8.54789 10.8934L12.4935 6.85368C12.6208 6.72087 12.6872 6.56592 12.6872 6.37777C12.6872 5.9904 12.3829 5.68604 12.0066 5.68604C11.8239 5.68604 11.6469 5.76351 11.5085 5.90186L8.00557 9.50439L4.49158 5.90186C4.35876 5.76904 4.18722 5.68604 3.99353 5.68604C3.61723 5.68604 3.31287 5.9904 3.31287 6.37777C3.31287 6.56038 3.38481 6.72087 3.51208 6.85368L7.45772 10.8934C7.62374 11.0594 7.79529 11.1369 8.00004 11.1369Z"
      }))), react.createElement("div", {
        className: `tr-collapsible ${chevronActive ? "" : "tr-collapsible--collapsed"}`,
        ref: collapsibleRef
      }, contentWidgets));
      // }
    }

    exports.CollapsibleDatagridTwo = CollapsibleDatagridTwo;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29sbGFwc2libGVEYXRhZ3JpZFR3by5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL0NvbGxhcHNpYmxlRGF0YWdyaWRUd28uanN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4vdWkvQ29sbGFwc2libGVEYXRhZ3JpZFR3by5jc3NcIjtcclxuaW1wb3J0IHsgY3JlYXRlRWxlbWVudCwgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gQ29sbGFwc2libGVEYXRhZ3JpZFR3byh7IGNsb3NlT25DbGljaywgY29udGVudFdpZGdldHMsIC4uLnJlc3QgfSkge1xyXG4gICAgY29uc3Qgc3R5bGUgPSByZXN0LmNsYXNzIHx8IFwiXCI7XHJcbiAgICBjb25zdCBjaGV2cm9uUmVmID0gdXNlUmVmKG51bGwpO1xyXG4gICAgY29uc3QgY29sbGFwc2libGVSZWYgPSB1c2VSZWYobnVsbCk7XHJcbiAgICBjb25zdCBkYXRhZ3JpZCA9IHVzZVJlZihudWxsKTtcclxuICAgIGNvbnN0IFtjaGV2cm9uQWN0aXZlLCBzZXRDaGV2cm9uQWN0aXZlXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gdXNlT3V0c2lkZUFsZXJ0ZXIocmVmMSwgcmVmMikge1xyXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZUNsaWNrT3V0c2lkZShldmVudCkge1xyXG4gICAgICAgICAgICBpZiAocmVmMS5jdXJyZW50ICYmICFyZWYxLmN1cnJlbnQuY29udGFpbnMoZXZlbnQudGFyZ2V0KSAmJiAhcmVmMi5jdXJyZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcclxuICAgICAgICAgICAgICAgIHNldENoZXZyb25BY3RpdmUoZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIGhhbmRsZUNsaWNrT3V0c2lkZSk7IC8vIEJpbmQgdGhlIGV2ZW50IGxpc3RlbmVyXHJcbiAgICAgICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIGhhbmRsZUNsaWNrT3V0c2lkZSk7IC8vIFVuYmluZCB0aGUgZXZlbnQgbGlzdGVuZXIgb24gY2xlYW4gdXBcclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gdG9nZ2xlVHJDb2xsYXBzZSgpIHtcclxuICAgICAgICBpZiAoIWNoZXZyb25BY3RpdmUpIHtcclxuICAgICAgICAgICAgY2xvc2VPbkNsaWNrICYmIHVzZU91dHNpZGVBbGVydGVyKGNvbGxhcHNpYmxlUmVmLCBjaGV2cm9uUmVmKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc2V0Q2hldnJvbkFjdGl2ZSghY2hldnJvbkFjdGl2ZSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKGNvbGxhcHNpYmxlUmVmICYmIGNvbGxhcHNpYmxlUmVmLmN1cnJlbnQpIHtcclxuICAgICAgICAgICAgZGF0YWdyaWQuY3VycmVudCA9IGNoZXZyb25SZWYuY3VycmVudC5jbG9zZXN0KCcud2lkZ2V0LWRhdGFncmlkJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJvdyA9IGNvbGxhcHNpYmxlUmVmLmN1cnJlbnQuY2xvc2VzdChcIi50clwiKTtcclxuICAgICAgICAgICAgcm93LmFwcGVuZENoaWxkKGNvbGxhcHNpYmxlUmVmLmN1cnJlbnQpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgYnRuLXRkLWNvbGxhcHNlICR7c3R5bGV9ICR7Y2hldnJvbkFjdGl2ZSA/IFwiYnRuLXRkLWNvbGxhcHNlLS1hY3RpdmVcIiA6IFwiXCJ9YH0gcmVmPXtjaGV2cm9uUmVmfSBvbkNsaWNrPXt0b2dnbGVUckNvbGxhcHNlfT5cclxuICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGhlaWdodD1cIjE2XCIgd2lkdGg9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTguMDAwMDQgMTEuMTM2OUM4LjIxMDMzIDExLjEzNjkgOC4zODc0MSAxMS4wNTM5IDguNTQ3ODkgMTAuODkzNEwxMi40OTM1IDYuODUzNjhDMTIuNjIwOCA2LjcyMDg3IDEyLjY4NzIgNi41NjU5MiAxMi42ODcyIDYuMzc3NzdDMTIuNjg3MiA1Ljk5MDQgMTIuMzgyOSA1LjY4NjA0IDEyLjAwNjYgNS42ODYwNEMxMS44MjM5IDUuNjg2MDQgMTEuNjQ2OSA1Ljc2MzUxIDExLjUwODUgNS45MDE4Nkw4LjAwNTU3IDkuNTA0MzlMNC40OTE1OCA1LjkwMTg2QzQuMzU4NzYgNS43NjkwNCA0LjE4NzIyIDUuNjg2MDQgMy45OTM1MyA1LjY4NjA0QzMuNjE3MjMgNS42ODYwNCAzLjMxMjg3IDUuOTkwNCAzLjMxMjg3IDYuMzc3NzdDMy4zMTI4NyA2LjU2MDM4IDMuMzg0ODEgNi43MjA4NyAzLjUxMjA4IDYuODUzNjhMNy40NTc3MiAxMC44OTM0QzcuNjIzNzQgMTEuMDU5NCA3Ljc5NTI5IDExLjEzNjkgOC4wMDAwNCAxMS4xMzY5WlwiIC8+XHJcbiAgICAgICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdHItY29sbGFwc2libGUgJHtjaGV2cm9uQWN0aXZlID8gXCJcIiA6IFwidHItY29sbGFwc2libGUtLWNvbGxhcHNlZFwifWB9IHJlZj17Y29sbGFwc2libGVSZWZ9PlxyXG4gICAgICAgICAgICAgICAge2NvbnRlbnRXaWRnZXRzfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgICAvLyB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIkNvbGxhcHNpYmxlRGF0YWdyaWRUd28iLCJjbG9zZU9uQ2xpY2siLCJjb250ZW50V2lkZ2V0cyIsInJlc3QiLCJzdHlsZSIsImNsYXNzIiwiY2hldnJvblJlZiIsInVzZVJlZiIsImNvbGxhcHNpYmxlUmVmIiwiZGF0YWdyaWQiLCJjaGV2cm9uQWN0aXZlIiwic2V0Q2hldnJvbkFjdGl2ZSIsInVzZVN0YXRlIiwidXNlT3V0c2lkZUFsZXJ0ZXIiLCJyZWYxIiwicmVmMiIsImhhbmRsZUNsaWNrT3V0c2lkZSIsImV2ZW50IiwiY3VycmVudCIsImNvbnRhaW5zIiwidGFyZ2V0IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInRvZ2dsZVRyQ29sbGFwc2UiLCJ1c2VFZmZlY3QiLCJjbG9zZXN0Iiwicm93IiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwicmVmIiwib25DbGljayIsInhtbG5zIiwiaGVpZ2h0Iiwid2lkdGgiLCJ2aWV3Qm94IiwiZCJdLCJtYXBwaW5ncyI6Ijs7SUFHTyxTQUFTQSxzQkFBc0JBLENBQUM7TUFBRUMsWUFBWTtNQUFFQyxjQUFjO01BQUUsR0FBR0MsSUFBQUE7SUFBSyxDQUFDLEVBQUU7SUFDOUUsRUFBQSxNQUFNQyxLQUFLLEdBQUdELElBQUksQ0FBQ0UsS0FBSyxJQUFJLEVBQUUsQ0FBQTtJQUM5QixFQUFBLE1BQU1DLFVBQVUsR0FBR0MsWUFBTSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQy9CLEVBQUEsTUFBTUMsY0FBYyxHQUFHRCxZQUFNLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDbkMsRUFBQSxNQUFNRSxRQUFRLEdBQUdGLFlBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQTtNQUM3QixNQUFNLENBQUNHLGFBQWEsRUFBRUMsZ0JBQWdCLENBQUMsR0FBR0MsY0FBUSxDQUFDLEtBQUssQ0FBQyxDQUFB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
